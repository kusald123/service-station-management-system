/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package AutoMiraj.View;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import AutoMiraj.Model.Item;
import AutoMiraj.Model.Supplier;
import AutoMiraj.Controller.ItemController;
import AutoMiraj.Controller.JoiningController;
import AutoMiraj.Controller.SupplierController;
import AutoMiraj.Controller.SupItemsController;
import AutoMiraj.DBconnect.DBConnection;
import AutoMiraj.Model.SupItems;
import AutoMiraj.Model.Itemsofsup;
import AutoMiraj.View.AdvDelete;
import AutoMiraj.View.login;
import AutoMiraj.View.login;
import AutoMiraj.View.main_gui;
import AutoMiraj.View.main_gui;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.Box;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;
import AutoMiraj.View.ordering;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kusal D
 */
public class Stock extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement stm = null;
    ResultSet k = null;

    public Stock() {
        try {
            initComponents();

            conn = DBConnection.getDBConnection().getConnection();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }

        stocktableload();
        suppliertableload();

        insufficientitemstbleload();

        moveouttableload();
        suppliertable2load();
        fillcombonames1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        RemoveItem = new javax.swing.JButton();
        UpdateItem = new javax.swing.JButton();
        AddItem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Iquantitytxt = new javax.swing.JTextField();
        Ipricetxt = new javax.swing.JTextField();
        Iidtxt = new javax.swing.JTextField();
        Inametxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Isellingtxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Itypecombo = new javax.swing.JComboBox();
        Imodeltxt = new javax.swing.JTextField();
        Ibrandtxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        SearchItem = new javax.swing.JButton();
        searchitemcombo = new javax.swing.JComboBox();
        search_itemnametxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        mvquantitytxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stock_table1 = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        moveouttable = new javax.swing.JTable();
        jButton18 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        Stypecombo = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        Snametxt = new javax.swing.JTextField();
        Slocationtxt = new javax.swing.JTextField();
        Sitemnametxt = new javax.swing.JTextField();
        Semailtxt = new javax.swing.JTextField();
        Sbrandtxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        Smodeltxt = new javax.swing.JTextField();
        Spricetxt = new javax.swing.JTextField();
        Squantitytxt = new javax.swing.JTextField();
        Sidtxt = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        itmidlbl = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        AddSup = new javax.swing.JButton();
        RemoveSup = new javax.swing.JButton();
        UpdateSup = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        suppliertable = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        searchsuppliertxt = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        searchitemtxt = new javax.swing.JTextField();
        searchlocationtxt = new javax.swing.JTextField();
        searchcombo = new javax.swing.JComboBox();
        SearchSup = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        nametxt = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        brandtxt = new javax.swing.JTextField();
        combotype = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        modeltxt = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        autofillbut = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jTextField28 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        expectedcom = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        insufficienttable = new javax.swing.JTable();
        insufslider = new javax.swing.JSlider();
        jLabel52 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        supplier_table2 = new javax.swing.JTable();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Stock Management");
        setBackground(new java.awt.Color(102, 102, 102));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setName("Stock and Supply Management"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(null);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/log out.png"))); // NOI18N
        jButton1.setText("Log Out");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(1010, 10, 120, 20);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back.png"))); // NOI18N
        jButton2.setText("Back");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(1139, 10, 100, 20);

        jTabbedPane2.setMinimumSize(new java.awt.Dimension(1280, 720));
        jTabbedPane2.setName("jTabbedPane2"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setMinimumSize(new java.awt.Dimension(1275, 700));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(1275, 700));

        RemoveItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/remove.png"))); // NOI18N
        RemoveItem.setText("Remove");
        RemoveItem.setName("RemoveItem"); // NOI18N
        RemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveItemActionPerformed(evt);
            }
        });

        UpdateItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update.png"))); // NOI18N
        UpdateItem.setText("Update");
        UpdateItem.setName("UpdateItem"); // NOI18N
        UpdateItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateItemActionPerformed(evt);
            }
        });

        AddItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        AddItem.setText("Add");
        AddItem.setName("AddItem"); // NOI18N
        AddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddItemActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Adding New Item", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Item Name");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Item ID");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Price");
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Quantity");
        jLabel4.setName("jLabel4"); // NOI18N

        Iquantitytxt.setName("Iquantitytxt"); // NOI18N

        Ipricetxt.setName("Ipricetxt"); // NOI18N

        Iidtxt.setEditable(false);
        Iidtxt.setBackground(new java.awt.Color(0, 0, 0));
        Iidtxt.setForeground(new java.awt.Color(153, 255, 255));
        Iidtxt.setName("Iidtxt"); // NOI18N
        Iidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IidtxtActionPerformed(evt);
            }
        });

        Inametxt.setName("Inametxt"); // NOI18N
        Inametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InametxtActionPerformed(evt);
            }
        });
        Inametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InametxtKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Selling Price");
        jLabel8.setName("jLabel8"); // NOI18N

        Isellingtxt.setName("Isellingtxt"); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Item Type");
        jLabel12.setName("jLabel12"); // NOI18N

        Itypecombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select type", "Oil", "Spare Part" }));
        Itypecombo.setName("Itypecombo"); // NOI18N
        Itypecombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItypecomboActionPerformed(evt);
            }
        });

        Imodeltxt.setName("Imodeltxt"); // NOI18N
        Imodeltxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ImodeltxtKeyReleased(evt);
            }
        });

        Ibrandtxt.setName("Ibrandtxt"); // NOI18N
        Ibrandtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IbrandtxtActionPerformed(evt);
            }
        });
        Ibrandtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                IbrandtxtKeyReleased(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Model");
        jLabel15.setName("jLabel15"); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Brand");
        jLabel14.setName("jLabel14"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8)
                    .addComponent(jLabel4)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel12)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Iquantitytxt)
                    .addComponent(Imodeltxt)
                    .addComponent(Ibrandtxt)
                    .addComponent(Iidtxt)
                    .addComponent(Inametxt)
                    .addComponent(Isellingtxt)
                    .addComponent(Itypecombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Ipricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Iidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Inametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(Itypecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ibrandtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Imodeltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ipricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Isellingtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Iquantitytxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(30, 30, 30))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search for an Item", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setOpaque(false);

        SearchItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        SearchItem.setText("Search");
        SearchItem.setName("SearchItem"); // NOI18N
        SearchItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchItemActionPerformed(evt);
            }
        });

        searchitemcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select type", "Oil", "Spare Part" }));
        searchitemcombo.setName("searchitemcombo"); // NOI18N

        search_itemnametxt.setName("search_itemnametxt"); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Name");
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Item Type");
        jLabel7.setName("jLabel7"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(search_itemnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SearchItem, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchitemcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search_itemnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchitemcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(29, 29, 29)
                .addComponent(SearchItem, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Move Out from Stock", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(0, 255, 255));
        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setOpaque(false);
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setText("Move out");
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 163, -1));

        mvquantitytxt.setName("mvquantitytxt"); // NOI18N
        jPanel4.add(mvquantitytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 100, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Selling Price");
        jLabel11.setName("jLabel11"); // NOI18N
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 70, 20));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Quantity");
        jLabel10.setName("jLabel10"); // NOI18N
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Item Name");
        jLabel9.setName("jLabel9"); // NOI18N
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        jButton6.setText("Add Details from Table");
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Vehicle No" }));
        jComboBox1.setName("jComboBox1"); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel4.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 100, -1));

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Vehicle No");
        jLabel47.setName("jLabel47"); // NOI18N
        jPanel4.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 147, -1, 30));

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setName("jLabel48"); // NOI18N
        jPanel4.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 30, 20));

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setName("jLabel49"); // NOI18N
        jPanel4.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 100, 20));

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setName("jLabel50"); // NOI18N
        jPanel4.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 90, 20));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Item ID");
        jLabel13.setName("jLabel13"); // NOI18N
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jButton8.setText("Generate a report");
        jButton8.setName("jButton8"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stock Inventory", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel13.setForeground(new java.awt.Color(0, 255, 255));
        jPanel13.setName("jPanel13"); // NOI18N
        jPanel13.setOpaque(false);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        stock_table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Item Type", "Brand", "Model", "Purchase Price", "Selling Price", "Quantity", "Date Received"
            }
        ));
        stock_table1.setName("stock_table1"); // NOI18N
        stock_table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stock_table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stock_table1);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Move Out List", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel15.setForeground(new java.awt.Color(0, 255, 255));
        jPanel15.setName("jPanel15"); // NOI18N
        jPanel15.setOpaque(false);

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        moveouttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Item Name", "Vehicle No", "Quantity", "Selling Price", "Date", "Time", "Total"
            }
        ));
        moveouttable.setName("moveouttable"); // NOI18N
        moveouttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moveouttableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(moveouttable);

        jButton18.setText("Return to Stock");
        jButton18.setName("jButton18"); // NOI18N
        jButton18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton18MouseClicked(evt);
            }
        });
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jButton18)
                        .addGap(0, 397, Short.MAX_VALUE))
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton18)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/clear.png"))); // NOI18N
        jButton3.setText("Clear All");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/relod.png"))); // NOI18N
        jButton4.setText("Refresh");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(AddItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(UpdateItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RemoveItem)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(UpdateItem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(RemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Stock Management", jPanel1);

        jPanel5.setName("jPanel5"); // NOI18N
        jPanel5.setOpaque(false);

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Supplier", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 14), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setOpaque(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Supplier Name");
        jLabel16.setName("jLabel16"); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Location");
        jLabel17.setName("jLabel17"); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Item Type");
        jLabel18.setName("jLabel18"); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Email");
        jLabel19.setName("jLabel19"); // NOI18N

        Stypecombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select type", "Oil", "Spare Part" }));
        Stypecombo.setName("Stypecombo"); // NOI18N

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Item Name");
        jLabel20.setName("jLabel20"); // NOI18N

        Snametxt.setName("Snametxt"); // NOI18N
        Snametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SnametxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SnametxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SnametxtKeyTyped(evt);
            }
        });

        Slocationtxt.setName("Slocationtxt"); // NOI18N
        Slocationtxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                SlocationtxtCaretUpdate(evt);
            }
        });
        Slocationtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SlocationtxtActionPerformed(evt);
            }
        });
        Slocationtxt.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                SlocationtxtInputMethodTextChanged(evt);
            }
        });
        Slocationtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SlocationtxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SlocationtxtKeyReleased(evt);
            }
        });

        Sitemnametxt.setName("Sitemnametxt"); // NOI18N
        Sitemnametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SitemnametxtKeyReleased(evt);
            }
        });

        Semailtxt.setName("Semailtxt"); // NOI18N

        Sbrandtxt.setName("Sbrandtxt"); // NOI18N
        Sbrandtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SbrandtxtKeyReleased(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Brand");
        jLabel21.setName("jLabel21"); // NOI18N

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Model");
        jLabel22.setName("jLabel22"); // NOI18N

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Price");
        jLabel23.setName("jLabel23"); // NOI18N

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Quantity");
        jLabel24.setName("jLabel24"); // NOI18N

        Smodeltxt.setName("Smodeltxt"); // NOI18N
        Smodeltxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SmodeltxtKeyReleased(evt);
            }
        });

        Spricetxt.setName("Spricetxt"); // NOI18N

        Squantitytxt.setName("Squantitytxt"); // NOI18N

        Sidtxt.setEditable(false);
        Sidtxt.setBackground(new java.awt.Color(51, 51, 51));
        Sidtxt.setForeground(new java.awt.Color(102, 255, 255));
        Sidtxt.setName("Sidtxt"); // NOI18N
        Sidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SidtxtActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Supplier ID");
        jLabel37.setName("jLabel37"); // NOI18N

        itmidlbl.setBackground(new java.awt.Color(51, 51, 51));
        itmidlbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itmidlbl.setForeground(new java.awt.Color(51, 255, 255));
        itmidlbl.setName("itmidlbl"); // NOI18N
        itmidlbl.setOpaque(true);

        jLabel51.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 255));
        jLabel51.setText("Item ID");
        jLabel51.setName("jLabel51"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Slocationtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Sitemnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Sidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Sbrandtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Smodeltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Spricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(Snametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Stypecombo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Squantitytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Semailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel51)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(itmidlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(Sidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(Snametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(Slocationtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(Semailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51)
                    .addComponent(itmidlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(Sitemnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(Sbrandtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(Smodeltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Stypecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(14, 14, 14)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(Spricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(Squantitytxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        AddSup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        AddSup.setText("Add");
        AddSup.setName("AddSup"); // NOI18N
        AddSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSupActionPerformed(evt);
            }
        });

        RemoveSup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/remove.png"))); // NOI18N
        RemoveSup.setText("Delete");
        RemoveSup.setName("RemoveSup"); // NOI18N
        RemoveSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveSupActionPerformed(evt);
            }
        });

        UpdateSup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update.png"))); // NOI18N
        UpdateSup.setText("Update");
        UpdateSup.setName("UpdateSup"); // NOI18N
        UpdateSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateSupActionPerformed(evt);
            }
        });

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Supplier List", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 12), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel12.setName("jPanel12"); // NOI18N
        jPanel12.setOpaque(false);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        suppliertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Supplier name", "Location", "Item_ID", "Item Name", "Item type", "Brand", "Model", "Price", "Quantity", "Email"
            }
        ));
        suppliertable.setName("suppliertable"); // NOI18N
        suppliertable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suppliertableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(suppliertable);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Find Supplier", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 0, 14), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel14.setName("jPanel14"); // NOI18N
        jPanel14.setOpaque(false);

        searchsuppliertxt.setName("searchsuppliertxt"); // NOI18N

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("Item Type");
        jLabel41.setName("jLabel41"); // NOI18N

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("Location");
        jLabel44.setName("jLabel44"); // NOI18N

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("Supplier Name");
        jLabel43.setName("jLabel43"); // NOI18N

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Item Name");
        jLabel42.setName("jLabel42"); // NOI18N

        searchitemtxt.setName("searchitemtxt"); // NOI18N

        searchlocationtxt.setName("searchlocationtxt"); // NOI18N

        searchcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select type", "Fuel", "Spare Part" }));
        searchcombo.setName("searchcombo"); // NOI18N

        SearchSup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        SearchSup.setText("Search");
        SearchSup.setName("SearchSup"); // NOI18N
        SearchSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchSupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel42)
                    .addComponent(jLabel43))
                .addGap(92, 92, 92)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchsuppliertxt, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addComponent(searchitemtxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44)
                    .addComponent(jLabel41))
                .addGap(30, 30, 30)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchlocationtxt)
                    .addComponent(searchcombo, 0, 108, Short.MAX_VALUE))
                .addGap(164, 164, 164))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(SearchSup)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(searchsuppliertxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchlocationtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel42)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchitemtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel41)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchSup, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/clear.png"))); // NOI18N
        jButton7.setText("Clear");
        jButton7.setName("jButton7"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/relod.png"))); // NOI18N
        jButton9.setText("Refresh");
        jButton9.setName("jButton9"); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton13.setText("Adv.Delete");
        jButton13.setName("jButton13"); // NOI18N
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddSup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(UpdateSup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RemoveSup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddSup, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UpdateSup, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RemoveSup, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton13)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Supply Management", jPanel5);

        jPanel9.setBackground(new java.awt.Color(51, 51, 51));
        jPanel9.setName("jPanel9"); // NOI18N
        jPanel9.setOpaque(false);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search for Fill Orders", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel8.setName("jPanel8"); // NOI18N
        jPanel8.setOpaque(false);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Item Name");
        jLabel25.setName("jLabel25"); // NOI18N

        nametxt.setName("nametxt"); // NOI18N
        nametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nametxtActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Brand");
        jLabel26.setName("jLabel26"); // NOI18N

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Item Type");
        jLabel27.setName("jLabel27"); // NOI18N

        brandtxt.setName("brandtxt"); // NOI18N

        combotype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select type", "Oil", "Spare Part" }));
        combotype.setName("combotype"); // NOI18N

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Model");
        jLabel28.setName("jLabel28"); // NOI18N

        modeltxt.setName("modeltxt"); // NOI18N

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        jButton12.setText("Search");
        jButton12.setName("jButton12"); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/clear.png"))); // NOI18N
        jButton10.setText("Clear");
        jButton10.setName("jButton10"); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/relod.png"))); // NOI18N
        jButton11.setText("Refresh");
        jButton11.setName("jButton11"); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel27))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combotype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modeltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jButton11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel25)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(nametxt))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel26)
                            .addGap(42, 42, 42)
                            .addComponent(brandtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(266, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combotype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(modeltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25)
                        .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel26)
                        .addComponent(brandtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(101, Short.MAX_VALUE)))
        );

        jButton16.setText("jButton16");
        jButton16.setName("jButton16"); // NOI18N

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "To Order", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel10.setName("jPanel10"); // NOI18N
        jPanel10.setOpaque(false);
        jPanel10.setLayout(null);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(240, 240, 240));
        jLabel29.setText("Item Name");
        jLabel29.setName("jLabel29"); // NOI18N
        jPanel10.add(jLabel29);
        jLabel29.setBounds(20, 60, 109, 17);

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(240, 240, 240));
        jLabel30.setText("Model");
        jLabel30.setName("jLabel30"); // NOI18N
        jPanel10.add(jLabel30);
        jLabel30.setBounds(20, 140, 35, 17);

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(240, 240, 240));
        jLabel31.setText("Supplier Name");
        jLabel31.setName("jLabel31"); // NOI18N
        jPanel10.add(jLabel31);
        jLabel31.setBounds(20, 180, 92, 17);

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(240, 240, 240));
        jLabel32.setText("Quantity");
        jLabel32.setName("jLabel32"); // NOI18N
        jPanel10.add(jLabel32);
        jLabel32.setBounds(20, 220, 53, 17);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(240, 240, 240));
        jLabel33.setText("Price");
        jLabel33.setName("jLabel33"); // NOI18N
        jPanel10.add(jLabel33);
        jLabel33.setBounds(20, 260, 53, 17);

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(240, 240, 240));
        jLabel34.setText("Location");
        jLabel34.setName("jLabel34"); // NOI18N
        jPanel10.add(jLabel34);
        jLabel34.setBounds(20, 300, 53, 20);

        jLabel35.setForeground(new java.awt.Color(240, 240, 240));
        jLabel35.setName("jLabel35"); // NOI18N
        jPanel10.add(jLabel35);
        jLabel35.setBounds(130, 140, 80, 20);

        jLabel36.setForeground(new java.awt.Color(240, 240, 240));
        jLabel36.setName("jLabel36"); // NOI18N
        jPanel10.add(jLabel36);
        jLabel36.setBounds(130, 180, 100, 20);

        jLabel39.setForeground(new java.awt.Color(240, 240, 240));
        jLabel39.setName("jLabel39"); // NOI18N
        jLabel39.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel10.add(jLabel39);
        jLabel39.setBounds(130, 300, 80, 16);

        jLabel38.setForeground(new java.awt.Color(240, 240, 240));
        jLabel38.setName("jLabel38"); // NOI18N
        jLabel38.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel10.add(jLabel38);
        jLabel38.setBounds(130, 260, 80, 16);

        jLabel40.setForeground(new java.awt.Color(240, 240, 240));
        jLabel40.setName("jLabel40"); // NOI18N
        jLabel40.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel10.add(jLabel40);
        jLabel40.setBounds(130, 60, 80, 16);

        autofillbut.setText("Auto Fill");
        autofillbut.setName("autofillbut"); // NOI18N
        autofillbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autofillbutActionPerformed(evt);
            }
        });
        jPanel10.add(autofillbut);
        autofillbut.setBounds(10, 425, 71, 30);

        jButton14.setText("Generate");
        jButton14.setName("jButton14"); // NOI18N
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton14);
        jButton14.setBounds(90, 425, 100, 30);

        jButton15.setText("Cancel");
        jButton15.setName("jButton15"); // NOI18N
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton15);
        jButton15.setBounds(190, 425, 65, 30);

        jTextField28.setName("jTextField28"); // NOI18N
        jTextField28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField28ActionPerformed(evt);
            }
        });
        jPanel10.add(jTextField28);
        jTextField28.setBounds(130, 220, 70, 20);

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(240, 240, 240));
        jLabel45.setText("Brand");
        jLabel45.setName("jLabel45"); // NOI18N
        jPanel10.add(jLabel45);
        jLabel45.setBounds(20, 100, 36, 17);

        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setName("jLabel46"); // NOI18N
        jPanel10.add(jLabel46);
        jLabel46.setBounds(130, 100, 80, 20);

        expectedcom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "In Days", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" }));
        expectedcom.setName("expectedcom"); // NOI18N
        jPanel10.add(expectedcom);
        expectedcom.setBounds(130, 340, 90, 20);

        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Expected Date");
        jLabel5.setName("jLabel5"); // NOI18N
        jPanel10.add(jLabel5);
        jLabel5.setBounds(20, 340, 100, 20);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Insufficient Items", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel11.setName("jPanel11"); // NOI18N
        jPanel11.setOpaque(false);

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        insufficienttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Currrent Quantity", "Item Type"
            }
        ));
        insufficienttable.setName("insufficienttable"); // NOI18N
        jScrollPane4.setViewportView(insufficienttable);

        insufslider.setForeground(new java.awt.Color(102, 255, 255));
        insufslider.setMajorTickSpacing(5);
        insufslider.setMaximum(50);
        insufslider.setMinorTickSpacing(5);
        insufslider.setPaintLabels(true);
        insufslider.setPaintTicks(true);
        insufslider.setValue(20);
        insufslider.setName("insufslider"); // NOI18N
        insufslider.setOpaque(false);
        insufslider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insufsliderMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                insufsliderMouseReleased(evt);
            }
        });

        jLabel52.setForeground(new java.awt.Color(240, 240, 240));
        jLabel52.setText("Insufficient Range");
        jLabel52.setName("jLabel52"); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel52)
                        .addGap(18, 18, 18)
                        .addComponent(insufslider, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(insufslider, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel52)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Supplier List", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 255, 255))); // NOI18N
        jPanel16.setName("jPanel16"); // NOI18N
        jPanel16.setOpaque(false);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        supplier_table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Supplier name", "Location", "Item Name", "Item type", "Brand", "Model", "Price", "Quantity", "Email"
            }
        ));
        supplier_table2.setName("supplier_table2"); // NOI18N
        supplier_table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplier_table2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(supplier_table2);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 955, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(549, 549, 549)
                        .addComponent(jButton16)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(176, 176, 176)
                .addComponent(jButton16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Ordering", jPanel9);

        getContentPane().add(jTabbedPane2);
        jTabbedPane2.setBounds(0, 30, 1266, 634);
        jTabbedPane2.getAccessibleContext().setAccessibleName("");

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/InterfaceBackground.jpg"))); // NOI18N
        Background.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        Background.setName("Background"); // NOI18N
        Background.setOpaque(true);
        Background.setPreferredSize(new java.awt.Dimension(1280, 720));
        getContentPane().add(Background);
        Background.setBounds(0, 0, 1280, 720);

        getAccessibleContext().setAccessibleName("Stock and Supply Management");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    boolean v1 = true;
    boolean v2 = true;
    boolean v3 = true;
    boolean v4 = true;
    boolean v5 = true;
    boolean v6 = true;
    boolean v7 = true;
    boolean v8 = true;
    boolean v9 = true;
    boolean v10 = true;
    boolean v11 = true;
    boolean v12 = true;
    boolean v13 = true;
    boolean v14 = true;
    boolean v15 = true;
    boolean v16 = true;

    public void fillcombonames1() {
        
        
        try{
    
   String sql="select * from customer ";
    
    stm=conn.prepareStatement(sql);
    k=stm.executeQuery();
    
    
    while(k.next()){
    
    String vno =k.getString("cvnumber");
   jComboBox1.addItem(vno);
    
   }
    
    }catch(Exception e){
    
   JOptionPane.showMessageDialog(null, e);
    
  }
        
//        ItemController k = new ItemController();
//        ArrayList m = k.getVehicleNo();
//        Iterator i1 = m.iterator();
//
//        
//        
//        while (i1.hasNext()) {
//            jComboBox1.addItem(i1.next());
//
//        }
    }

    public void EmailGenerate(String iname, String br, String mo, String snam, String quan, String price, String loca, String email,String expcdate) {

        ordering ord = new ordering();
        ord.setVisible(true);
        ord.body.append("Dear " + snam + "\n");
        ord.body.append("\n");
        ord.body.append("A new order has been placed. Please see the details below\n");
        ord.body.append("\n");
        ord.body.append("----------------Product Ordered-------------------------\n");
        ord.body.append("Item Name      \t\t: " + iname + "\n");
        ord.body.append("Item Brand     \t\t: " + br + "\n");
        ord.body.append("Item Model     \t\t: " + mo + "\n");
        ord.body.append("Quantity needed\t: " + quan + "\n");
        ord.body.append("Expected Date  \t\t: " + expcdate + "\n");
        ord.body.append("----------------------------------------------------------------\n");
        ord.body.append("Regards, \n");
        ord.body.append("\t Auto Miraj Service Station (Mount Lavinia)");

        ord.rece.setText(email);
        ord.subj.setText("To Order " + iname);

    }

    public void stocktableload() {

        try {
            String sql = "SELECT item_id as Item_ID,item_name as Name,item_type as Type,item_brand as Brand,item_model as Model,item_purchase_price as Purchase_Price,item_selling_price as Selling_Price,quantity as Quantity,date_received as Received_Date FROM stock_inventory";
            stm = conn.prepareStatement(sql);

            k = stm.executeQuery();
            stock_table1.setModel(DbUtils.resultSetToTableModel(k));

        } catch (Exception e) {
        }

    }

    public void suppliertableload() {
        try {

           // String sql = "SELECT s.sid,s.sname,s.slocation,i.iname,iitype,i.ibrand,i.imodel,i.iprice,i.iquantity,i.iprice,s.semail FROM suppliers s,itemsneeded i,suppliersitems l where s.sid=l.sup_id AND i.iid=l.itemid";
String sql="select s.sid as S_ID,s.sname as Supplier,s.slocation as Location,i.iid as Item_ID,i.iname as Item_Name,i.itype as Type,i.ibrand as Brand,i.imodel as Model,b.iprice as Price,b.iquantity as Quantity,s.semail as Email from suppliers s,itemsneeded i,suppliersitems b where s.sid=b.sup_id AND i.iid=b.itemid ";
            stm = conn.prepareStatement(sql);

            k = stm.executeQuery();

            suppliertable.setModel(DbUtils.resultSetToTableModel(k));
        } catch (Exception e) {

        }
    }

    public void insufficientitemstbleload() {
        try {

            String sql = "Select item_id as ID, item_name as Name, quantity as Quantity, item_type as Type from stock_inventory where quantity <= 20";

            stm = conn.prepareStatement(sql);

            k = stm.executeQuery();

            insufficienttable.setModel(DbUtils.resultSetToTableModel(k));

        } catch (Exception e) {
        }
    }

    public void moveouttableload() {
        try {

            String sql = "select item_id as Item_ID,item_name as Item_Name,vehicle_no as Vehicle_No,quantity as Quantity,selling_price as Selling,date as Date,time as Time,cost as Cost from move_out";

            stm = conn.prepareStatement(sql);
            k = stm.executeQuery();

            moveouttable.setModel(DbUtils.resultSetToTableModel(k));

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void suppliertable2load() {
        try {

            String sql = "select s.sid as S_ID,s.sname as Supplier,s.slocation as Location,i.iid as Item_ID,i.iname as Item_Name,i.itype as Type,i.ibrand as Brand,i.imodel as Model,b.iprice as Price,b.iquantity as Quantity,s.semail as Email from suppliers s,itemsneeded i,suppliersitems b where s.sid=b.sup_id AND i.iid=b.itemid ";

            stm = conn.prepareStatement(sql);

            k = stm.executeQuery();

            supplier_table2.setModel(DbUtils.resultSetToTableModel(k));
        } catch (Exception e) {

        }
    }

    public void clearm() {
        Iquantitytxt.setText(null);
        Ipricetxt.setText(null);
        Iidtxt.setText(null);
        Inametxt.setText(null);
        Isellingtxt.setText(null);
        Imodeltxt.setText(null);
        Ibrandtxt.setText(null);

        Itypecombo.setSelectedItem("Select type");

    }

    public void clears() {
        Stypecombo.setSelectedItem("Select type");
        Snametxt.setText(null);
        Slocationtxt.setText(null);
        Sitemnametxt.setText(null);
        Semailtxt.setText(null);
        Sbrandtxt.setText(null);
        Smodeltxt.setText(null);
        Spricetxt.setText(null);
        Squantitytxt.setText(null);
        Sidtxt.setText(null);
        itmidlbl.setText(null);
    }


    private void nametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nametxtActionPerformed

    private void AddSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSupActionPerformed

//         boolean status=Stock.validateEmail(Semailtxt.getText()); if(status){ jLabel2.setText("Email Valid"); }else{ JOptionPane.showMessageDialog(null, "Invalid Email!"); }
        String s_name1 = Snametxt.getText();
        String s_location1 = Slocationtxt.getText();
        String item_type1 = Stypecombo.getSelectedItem().toString();
        String item_name1 = Sitemnametxt.getText();
        String s_email1 = Semailtxt.getText();
        String item_brand1 = Sbrandtxt.getText();
        String item_model1 = Smodeltxt.getText();
        String item_price1 = Spricetxt.getText();
        String item_quantity1 = Squantitytxt.getText();

        if (s_name1.isEmpty()) {
            v2 = false;
            JOptionPane.showMessageDialog(null, "Supplier's name should not be empty!");
        } else if (!s_name1.matches("[a-zA-Z]+")) {
            v3 = false;
            JOptionPane.showMessageDialog(null, "Invalid name format!");
        } else if (s_location1.isEmpty()) {
            v4 = false;
            JOptionPane.showMessageDialog(null, "Supplier's location should not be empty!");
        } else if (!s_location1.matches("[a-zA-Z]+")) {
            v5 = false;
            JOptionPane.showMessageDialog(null, "Invalid location format!");
        } else if (item_name1.isEmpty()) {
            v6 = false;
            JOptionPane.showMessageDialog(null, "Item Name should not be empty!");
        } else if (!item_name1.matches("[a-zA-Z]+")) {
            v7 = false;
            JOptionPane.showMessageDialog(null, "Invalid Item Name format!");
        } else if (item_brand1.isEmpty()) {
            v8 = false;
            JOptionPane.showMessageDialog(null, "Item Brand should not be empty!");
        } else if (!item_brand1.matches("[a-zA-Z]+")) {
            v9 = false;
            JOptionPane.showMessageDialog(null, "Invalid Item Brand format!");
        } else if (item_model1.isEmpty()) {
            v10 = false;
            JOptionPane.showMessageDialog(null, "Item Model should not be empty!");
        } else if (!item_model1.matches("[a-zA-Z]+")) {
            v11 = false;
            JOptionPane.showMessageDialog(null, "Invalid Item Model format!");
        } else if (s_email1.isEmpty()) {
            v12 = false;
            JOptionPane.showMessageDialog(null, "Supplier's email should not be empty!");
        } else if (s_email1.indexOf("@") == -1 || !(s_email1.endsWith(".com"))) {
            v13 = false;
            JOptionPane.showMessageDialog(null, "Invalid Email format!");
        } else if (item_quantity1.isEmpty()) {
            v14 = false;
            JOptionPane.showMessageDialog(null, "Quantity should not be empty!");
        } else if (item_price1.isEmpty()) {
            v15 = false;
            JOptionPane.showMessageDialog(null, "Item price should not be empty!");
        } else if (item_type1.equals("select type")) {
            v16 = false;
            JOptionPane.showMessageDialog(null, "Select item type");
        } else {

            String s_ID = Sidtxt.getText();
            String s_name = Snametxt.getText();
            String s_location = Slocationtxt.getText();
            String item_type = Stypecombo.getSelectedItem().toString();
            String item_name = Sitemnametxt.getText();
            String s_email = Semailtxt.getText();
            String item_brand = Sbrandtxt.getText();
            String item_model = Smodeltxt.getText();
            Double item_price = Double.parseDouble(Spricetxt.getText());
            int item_quantity = Integer.parseInt(Squantitytxt.getText());
            String item_id = itmidlbl.getText();
            
            
       
            String sql="select sid from suppliers where sid='"+s_ID+"'";
            String sqli="select iid from itemsneeded where iid='"+item_id+"'";
            try {
                stm=conn.prepareStatement(sql);
                 k=stm.executeQuery();
                Boolean rs=k.first();
                stm=conn.prepareStatement(sqli);
                ResultSet j=stm.executeQuery();
                Boolean ir=j.first();
                
                if(rs.equals(true) && ir.equals(true)){

                    SupItems supitems=new SupItems(s_ID,item_id,item_price,item_quantity);
                    try {
                        int res1=JoiningController.addMiddle(supitems);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    
                    
                }
                else if(rs.equals(true) && ir.equals(false)){
                  
                    
                    Itemsofsup itemsofsup=new Itemsofsup(item_id,item_name,item_type,item_brand,item_model);
                    try {
                        int res= SupItemsController.addSupItems(itemsofsup);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    SupItems supitems=new SupItems(s_ID,item_id,item_price,item_quantity);
                    try {
                        int res1=JoiningController.addMiddle(supitems);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    
                    
                    
                    
                }
             else if(rs.equals(false) && ir.equals(true)){
                 
                 Supplier supplier=new Supplier(s_ID,s_name,s_location,s_email);
                    try {
                        int yu=SupplierController.addSupplier(supplier);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                 SupItems supitems=new SupItems(s_ID,item_id,item_price,item_quantity);
                    try {
                        int res1=JoiningController.addMiddle(supitems);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                 
                 
                 
             }
             else{
                 
                 Supplier supplier=new Supplier(s_ID,s_name,s_location,s_email);
                    try {
                        int yu=SupplierController.addSupplier(supplier);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    Itemsofsup itemsofsup=new Itemsofsup(item_id,item_name,item_type,item_brand,item_model);
                    try {
                        int res= SupItemsController.addSupItems(itemsofsup);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    SupItems supitems=new SupItems(s_ID,item_id,item_price,item_quantity);
                    try {
                        int res1=JoiningController.addMiddle(supitems);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                 
                 
                 
                 
             }
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
            }
                    
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            

            suppliertableload();
            clears();
        }


    }//GEN-LAST:event_AddSupActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void IbrandtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IbrandtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IbrandtxtActionPerformed

    private void ItypecomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItypecomboActionPerformed

        //        if(evt.equals(Oil))
        //        {
        //            jTextField12.disable();
        //            jTextField13.disable();
        //        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ItypecomboActionPerformed

    private void UpdateItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateItemActionPerformed

        int u = stock_table1.getSelectedRow();
        if (u < 0) {
            v9 = false;
            JOptionPane.showMessageDialog(null, "Select a row from Stock Inventory to Update");
        } else {
            int m = JOptionPane.showConfirmDialog(null, "Do You want to Update?");

            if (m == 0) {
                String item_name = Inametxt.getText();
                String item_ID = Iidtxt.getText();
                double item_price = Double.parseDouble(Ipricetxt.getText());
                String item_brand = Ibrandtxt.getText();
                String item_model = Imodeltxt.getText();
                int item_quantity = Integer.parseInt(Iquantitytxt.getText());
                String date_received = getcurrentdate();
                double item_selling = Double.parseDouble(Isellingtxt.getText());
                String item_type = Itypecombo.getSelectedItem().toString();
                //System.out.println("kusaaaaaaal11111");
                Item item = new Item(item_ID, item_name, item_type, item_brand, item_model, item_price, item_selling, item_quantity, date_received);
                //System.out.println("kusaaaaaaal222222");  
                try {
                    //System.out.println("kusaaaaaaal333333");
                    int res = ItemController.updateItem(item);

                    if (res > 0) {
                        JOptionPane.showMessageDialog(this, "Update Success");
                    } else {
                        JOptionPane.showMessageDialog(this, "Update Fail");
                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);

                }

            }

            stocktableload();
            insufficientitemstbleload();
            clearm();

// TODO add your handling code here:
        }

    }//GEN-LAST:event_UpdateItemActionPerformed

    private void AddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddItemActionPerformed
        //add_items();
        String item_name1 = Inametxt.getText();
        String item_ID1 = Iidtxt.getText();
        String item_price1 = Ipricetxt.getText();
        String item_brand1 = Ibrandtxt.getText();
        String item_model1 = Imodeltxt.getText();
        String item_quantity1 = Iquantitytxt.getText();
        //String date_received1=((JTextField)Idatereceivedtxt.getDateEditor().getUiComponent()).getText();
        String item_selling1 = Isellingtxt.getText();
        String item_type1 = Itypecombo.getSelectedItem().toString();

        if (item_name1.isEmpty()) {
            v2 = false;
            JOptionPane.showMessageDialog(null, "Item name should not be empty!");
        } else if (!item_name1.matches("[a-zA-Z]+")) {
            v3 = false;
            JOptionPane.showMessageDialog(null, "Invalid Item name format!");
        } else if (item_brand1.isEmpty()) {
            v4 = false;
            JOptionPane.showMessageDialog(null, "Item Brand should not be empty!");
        } else if (!item_brand1.matches("[a-zA-Z]+")) {
            v5 = false;
            JOptionPane.showMessageDialog(null, "Invalid Item Brand format!");
        } else if (item_model1.isEmpty()) {
            v6 = false;
            JOptionPane.showMessageDialog(null, "Item Model should not be empty!");
        } else if (!item_model1.matches("[a-zA-Z]+")) {
            v7 = false;
            JOptionPane.showMessageDialog(null, "Invalid Item Model format!");
        } else if (item_price1.isEmpty()) {
            v9 = false;
            JOptionPane.showMessageDialog(null, "Item purchase price should not be empty!");
        } else if (item_quantity1.isEmpty()) {
            v10 = false;
            JOptionPane.showMessageDialog(null, "Quantity should not be empty!");
        } else if (item_selling1.isEmpty()) {
            v11 = false;
            JOptionPane.showMessageDialog(null, "Item selling price should not be empty!");
        } else if (item_type1.equals("Select type")) {
            v12 = false;
            JOptionPane.showMessageDialog(null, "Select Item type");
        } else {

            try {
                String item_name = Inametxt.getText();
                String item_ID = Iidtxt.getText();
                double item_price = Double.parseDouble(Ipricetxt.getText());
                String item_brand = Ibrandtxt.getText();
                String item_model = Imodeltxt.getText();
                int item_quantity = Integer.parseInt(Iquantitytxt.getText());
                String date_received = getcurrentdate();
                double item_selling = Double.parseDouble(Isellingtxt.getText());
                String item_type = Itypecombo.getSelectedItem().toString();

                Item item = new Item(item_ID, item_name, item_type, item_brand, item_model, item_price, item_selling, item_quantity, date_received);
                int res = ItemController.addItem(item);

//        if(res > 0 && item_name.length() !=0 && item_ID.length() !=0 && item_price !=0 && item_brand.length() !=0 && item_model.length() !=0 && item_quantity !=0 && date_received.length() !=0 && item_selling !=0 && item_type.length() !=0 )
//        {
//        
//          JOptionPane.showMessageDialog(null,"Successful");
//            
//        }
//        
//        else
//        {
//            JOptionPane.showMessageDialog(null, "Please Fill the details");
//        }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

            stocktableload();
            clearm();
        }


    }//GEN-LAST:event_AddItemActionPerformed

    private void IidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IidtxtActionPerformed
        String item_ID = Iidtxt.getText();
        String combo = searchitemcombo.getSelectedItem().toString();

//         try {
//            Item item = ItemController.searchItem(item_ID,combo);
//            if (item != null) {
//                
//        Inametxt.setText(item.getItem_name());
//        Ipricetxt.setText(Double.toString(item.getItem_price()));
//        Ibrandtxt.setText(item.getItem_brand());
//        Imodeltxt.setText(item.getItem_model());
//        Iquantitytxt.setText(Integer.toString((int) item.getItem_quantity()));
//        Idatereceivedtxt.setText(item.getDate_received());
//        Isellingtxt.setText(Double.toString(item.getItem_selling()));
//        Itypecombo.setSelectedItem(item.getItem_type());
//                
//            } else {
//                JOptionPane.showMessageDialog(this, "No Item found..");
//            }
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
// TODO add your handling code here:
    }//GEN-LAST:event_IidtxtActionPerformed

    private void RemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveItemActionPerformed

        int u = stock_table1.getSelectedRow();
        if (u < 0) {
            v1 = false;
            JOptionPane.showMessageDialog(null, "Select a row from Stock Inventory to Delete");
        } else {
            int m = JOptionPane.showConfirmDialog(null, "Do you want to delete?");

            if (m == 0) {
                String item_ID = Iidtxt.getText();

                try {
                    int res = ItemController.deleteItem(item_ID);
                    if (res > 0) {
                        JOptionPane.showMessageDialog(this, "Delete success");
                    } else {
                        JOptionPane.showMessageDialog(this, "Delete Fail");
                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                }

                stocktableload();
                clearm();
            }
        }
    }//GEN-LAST:event_RemoveItemActionPerformed

    private void RemoveSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveSupActionPerformed

        int u = suppliertable.getSelectedRow();
        if (u < 0) {
            v8 = false;
            JOptionPane.showMessageDialog(null, "Select a row from Supplier list to Delete");
        } else {
            int m = JOptionPane.showConfirmDialog(null, "Do you want to delete?");

            if (m == 0) {

                String s_ID = Sidtxt.getText();
               String i_id= itmidlbl.getText();
                try {
                    int res =JoiningController.deleteMiddle(s_ID, i_id);
                    if (res > 0) {
                        JOptionPane.showMessageDialog(this, "Delete success");
                    } else {
                        JOptionPane.showMessageDialog(this, "Delete Fail");
                    }
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                }

                suppliertableload();
                clears();
            }
        }
    }//GEN-LAST:event_RemoveSupActionPerformed

    private void SidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SidtxtActionPerformed
        String s_ID = Sidtxt.getText();

//        try {
//            Supplier supplier = SupplierController.searchSupplier(s_ID);
//            if (supplier != null) {
//                
//                Snametxt.setText(supplier.getS_name());
//                Slocationtxt.setText(supplier.getS_location());
//                Stypecombo.setSelectedItem(supplier.getItem_type());
//                Sitemnametxt.setText(supplier.getItem_name());
//                Semailtxt.setText(supplier.getS_email());
//                Sbrandtxt.setText(supplier.getItem_brand());
//                Smodeltxt.setText(supplier.getItem_model());
//                Spricetxt.setText(Double.toString(supplier.getItem_price()));
//                Squantitytxt.setText(Integer.toString((int) supplier.getItem_quantity()));
//                
//            } else {
//                JOptionPane.showMessageDialog(this, "No Customer found..");
//            }
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_SidtxtActionPerformed

    private void UpdateSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateSupActionPerformed
        int u = suppliertable.getSelectedRow();
        if (u < 0) {
            v7 = false;
            JOptionPane.showMessageDialog(null, "Select a row from Supplier list to Update");
        } else {

            int m = JOptionPane.showConfirmDialog(null, "Do you want to Update?");
            if (m == 0) {
                String s_ID = Sidtxt.getText();
                String s_name = Snametxt.getText();
                String s_location = Slocationtxt.getText();
                String item_type = Stypecombo.getSelectedItem().toString();
                String item_name = Sitemnametxt.getText();
                String s_email = Semailtxt.getText();
                String item_brand = Sbrandtxt.getText();
                String item_model = Smodeltxt.getText();
                Double item_price = Double.parseDouble(Spricetxt.getText());
                int item_quantity = Integer.parseInt(Squantitytxt.getText());
                String item_id = itmidlbl.getText();

                Supplier supplier = new Supplier(s_ID, s_name, s_location, s_email);
                
                
                Itemsofsup itemsofsup=new Itemsofsup(item_id, item_name, item_type, item_brand, item_model);
                
                SupItems supitems=new SupItems(s_ID,item_id,item_price,item_quantity);
                
                
//                SupItems supitems = new SupItems(s_ID, item_id);
//                int res1 = SupplierController.addmiddle(s_ID, item_id);
                try {
                    int res = SupplierController.updateSupplier(supplier);
                    int res0= SupItemsController.updateitemsofsup(itemsofsup);
                    int res1=JoiningController.updateMiddle(supitems);
                    if (res > 0) {
                        JOptionPane.showMessageDialog(this, "Update Success");
                    } else {
                        JOptionPane.showMessageDialog(this, "Update Fail");
                    }
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
                }

                suppliertableload();
                clears();
            }
        }
    }//GEN-LAST:event_UpdateSupActionPerformed

    private void SearchSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchSupActionPerformed

//       String supname1=searchsuppliertxt.getText();
//        String location1=searchlocationtxt.getText();
//        String itemname1=searchitemtxt.getText();
        String typecombo1 = searchcombo.getSelectedItem().toString();
//        
//        if(supname1.equals("")){
//            v2=false;
//            JOptionPane.showMessageDialog(null, "Enter Supplier Name that you want to search");
//        }
//        else if(location1.equals("")){
//            v3=false;
//            JOptionPane.showMessageDialog(null, "Enter Supplier's location");
//        }
//        else if(itemname1.equals("")){
//            v4=false;
//            JOptionPane.showMessageDialog(null, "Enter item name that supplier supply");
//        }
//        
        if (typecombo1.equals("Select type")) {
            v5 = false;
            JOptionPane.showMessageDialog(null, "Select item type of the item");
        } else {

            String supname = searchsuppliertxt.getText();
            String location = searchlocationtxt.getText();
            String itemname = searchitemtxt.getText();
            String typecombo = searchcombo.getSelectedItem().toString();

          String sql="select s.sid,s.sname,s.slocation,i.iid,i.iname,i.itype,i.ibrand,i.imodel,b.iprice,b.iquantity,s.semail from suppliers s,itemsneeded i,suppliersitems b where s.sid=b.sup_id AND i.iid=b.itemid AND s.sname LIKE '%"+supname+"%' AND s.slocation LIKE '%"+location+"%' AND i.iname LIKE '%"+itemname+"%' AND i.itype='"+typecombo+"'";
               
            try {
                stm=conn.prepareStatement(sql);
                k=stm.executeQuery();
//                ResultSet m=k;
//                Boolean ki=k.isFirst();
                //if(ki.equals(true)){
                    
                JOptionPane.showMessageDialog(null, "Search Result found");
                suppliertable.setModel(DbUtils.resultSetToTableModel(k));
                
//                }
//                else{
//                    JOptionPane.showMessageDialog(null, "No Result found");
//                }
            } catch (SQLException ex) {
                Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
            }
          

        }


    }//GEN-LAST:event_SearchSupActionPerformed

    private void SearchItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchItemActionPerformed
        String item_name1 = search_itemnametxt.getText();
        String combo1 = searchitemcombo.getSelectedItem().toString();

        if (item_name1.equals("")) {
            v1 = false;
            JOptionPane.showMessageDialog(null, "Enter Item name for search");
        } else if (combo1.equals("Select type")) {
            v2 = false;
            JOptionPane.showMessageDialog(null, "Please select Item type for search");
        } else {

            String item_name = search_itemnametxt.getText();
            String combo = searchitemcombo.getSelectedItem().toString();
            try {
                ResultSet rst = ItemController.searchItem(item_name, combo);
            //System.out.println(rst);

                if (rst != null) {

                    //JOptionPane.showMessageDialog(this, "Item found..");
                    stock_table1.setModel(DbUtils.resultSetToTableModel(rst));

                } else {
                    JOptionPane.showMessageDialog(this, "No Item found..");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
            }
//       try{
//       String sql="select * from stock_inventory where item_name LIKE '%"+item_name+"%' AND item_type='"+combo+"'";
//      stm= conn.prepareStatement(sql);
//      k=stm.executeQuery();
//      
//      stock_table1.setModel(DbUtils.resultSetToTableModel(k));
//      
//      
//      
//       }
//       catch(Exception e){}
//      
        }

    }//GEN-LAST:event_SearchItemActionPerformed


    private void stock_table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stock_table1MouseClicked
        // TODO add your handling code here:

        int t = stock_table1.getSelectedRow();

        String item_ID = stock_table1.getValueAt(t, 0).toString();
        String item_name = stock_table1.getValueAt(t, 1).toString();
        String item_price = stock_table1.getValueAt(t, 5).toString();
        String item_brand = stock_table1.getValueAt(t, 3).toString();
        String item_model = stock_table1.getValueAt(t, 4).toString();
        String item_quantity = stock_table1.getValueAt(t, 7).toString();
        //String date_received=stock_table1.getValueAt(t, 8).toString();
        String item_selling = stock_table1.getValueAt(t, 6).toString();
        String item_type = stock_table1.getValueAt(t, 2).toString();

//        DateFormat k=new SimpleDateFormat("MMM d, yyyy");
//        Date date_rec = null;
//        try {
//            date_rec = k.parse(date_received);
//        } catch (ParseException ex) {
//            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
//        }
        Inametxt.setText(item_name);
        Ipricetxt.setText(item_price);
        Ibrandtxt.setText(item_brand);
        Imodeltxt.setText(item_model);
        Iquantitytxt.setText(item_quantity);
        Isellingtxt.setText(item_selling);
        Itypecombo.setSelectedItem(item_type);
        Iidtxt.setText(item_ID);


    }//GEN-LAST:event_stock_table1MouseClicked

    private void suppliertableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppliertableMouseClicked
        // TODO add your handling code here:

        int t = suppliertable.getSelectedRow();

        String s_ID = suppliertable.getValueAt(t, 0).toString();
        String s_name = suppliertable.getValueAt(t, 1).toString();
        String s_location = suppliertable.getValueAt(t, 2).toString();
        String item_type = suppliertable.getValueAt(t, 5).toString();
        String item_id=suppliertable.getValueAt(t, 3).toString();
        String item_name = suppliertable.getValueAt(t, 4).toString();
        String s_email = suppliertable.getValueAt(t, 9).toString();
        String item_brand = suppliertable.getValueAt(t, 6).toString();
        String item_model = suppliertable.getValueAt(t, 7).toString();
        String item_price = suppliertable.getValueAt(t, 8).toString();
        String item_quantity = suppliertable.getValueAt(t, 9).toString();

        Snametxt.setText(s_name);
        Sidtxt.setText(s_ID);
        Slocationtxt.setText(s_location);
        Stypecombo.setSelectedItem(item_type);
        Sitemnametxt.setText(item_name);
        Semailtxt.setText(s_email);
        Sbrandtxt.setText(item_brand);
        Smodeltxt.setText(item_model);
        Spricetxt.setText(item_price);
        Squantitytxt.setText(item_quantity);
        itmidlbl.setText(item_id);

    }//GEN-LAST:event_suppliertableMouseClicked

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed

        String name1 = nametxt.getText();
        String brand1 = brandtxt.getText();
        String model1 = modeltxt.getText();
        String combo1 = combotype.getSelectedItem().toString();

//        if (name1.equals("")) {
//            v2 = false;
//            JOptionPane.showMessageDialog(null, "Enter Item Name for Search");
//        } else if (brand1.equals("")) {
//            v2 = false;
//            JOptionPane.showMessageDialog(null, "Enter Item Brand for Search");
//        } else if (model1.equals("")) {
//            v2 = false;
//            JOptionPane.showMessageDialog(null, "Enter Item Model for Search");
//        } else
        if (combo1.equals("Select type")) {
            v2 = false;
            JOptionPane.showMessageDialog(null, "Select Item Type");
        } else {

            String name = nametxt.getText();
            String brand = brandtxt.getText();
            String model = modeltxt.getText();
            String combo = combotype.getSelectedItem().toString();
            try {
                   String sql="select s.sid,s.sname,s.slocation,i.iid,i.iname,i.itype,i.ibrand,i.imodel,b.iprice,b.iquantity,s.semail from suppliers s,itemsneeded i,suppliersitems b where s.sid=b.sup_id AND i.iid=b.itemid AND i.iname LIKE '%"+name+"%' AND i.ibrand LIKE '%"+brand+"%' AND i.imodel LIKE '%"+model+"%' AND i.itype='"+combo+"'";
                        stm=conn.prepareStatement(sql);
                        k=stm.executeQuery();
                    supplier_table2.setModel(DbUtils.resultSetToTableModel(k));
                }

            catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

//    private String purchprice(String l){
//        System.out.println(l);
//        return l;
//    }
//    
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        int m = stock_table1.getSelectedRow();

        System.out.println("first");
        if (m < 0) {
            v1 = false;
            JOptionPane.showMessageDialog(null, "Please select a row from Stock Inventory");
        } else {

            System.out.println("2nd");
            int k = stock_table1.getSelectedRow();

            String item_ID = stock_table1.getValueAt(k, 0).toString();
            String item_name = stock_table1.getValueAt(k, 1).toString();
            String item_price = stock_table1.getValueAt(k, 5).toString();
            String item_brand = stock_table1.getValueAt(k, 3).toString();
            String item_model = stock_table1.getValueAt(k, 4).toString();
            String item_quantity = stock_table1.getValueAt(k, 7).toString();
            String date_received = stock_table1.getValueAt(k, 8).toString();
            String item_selling = stock_table1.getValueAt(k, 6).toString();
            String item_type = stock_table1.getValueAt(k, 2).toString();
            
            String quant = mvquantitytxt.getText();

            jLabel48.setText(item_ID);
            jLabel49.setText(item_selling);
            jLabel50.setText(item_name);
            
            
            
            
//        Double item_tot=(Double.parseDouble(item_selling))*(Integer.parseInt(quant));
//        
//        System.out.println(item_tot);
//        
        }

        // TODO add your handling code here:

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        String quantity1 = mvquantitytxt.getText();

        String vehi = jComboBox1.getSelectedItem().toString();
        String itemn = jLabel48.getText();
        String ll = jLabel49.getText();
        int y=stock_table1.getSelectedRow();
        String qq=stock_table1.getValueAt(y, 7).toString();

        if (quantity1.isEmpty()) {
            v1 = false;
            JOptionPane.showMessageDialog(null, "Quantity should not be empty!");
        } else if (itemn.length() == 0 && ll.length() == 0) {
            v2 = false;
            JOptionPane.showMessageDialog(null, "Select a row from Stock inventory and add it");
        } else if (vehi.equals("Vehicle No")) {
            v4 = false;
            JOptionPane.showMessageDialog(null, "Vehicle No should not be empty");
        }else if(Integer.parseInt(quantity1)>Integer.parseInt(qq)){
            v5=false;
            JOptionPane.showMessageDialog(null, "Quantity should be less than the Quantity Available in the stock");

        } else {

            String id = jLabel48.getText();
            String quantity = mvquantitytxt.getText();
            String price = jLabel49.getText();
            String date = getcurrentdate();
            String vno = jComboBox1.getSelectedItem().toString();
            String time = getCurrentTime();
            String name = jLabel50.getText();
            int q = (Integer.parseInt(quantity));
            
          int rr=stock_table1.getSelectedRow();
          
          String purch=stock_table1.getValueAt(rr,5).toString();
          
          Double purchtot=(Double.parseDouble(purch))*q;
          
            

            Double tot = (Double.parseDouble(price)) * q;
            
            Double profit=tot-purchtot;

            int l = JOptionPane.showConfirmDialog(null, "Total Cost is " + tot);

            if (l == 0) {
                try {
                    String sql = "Insert into move_out (item_id,item_name,quantity,selling_price,vehicle_no,date,time,cost,Profit) values ('" + id + "','" + name + "','" + quantity + "','" + price + "','" + vno + "','" + date + "','" + time + "','" + tot + "','"+profit+"') ";

                    stm = conn.prepareStatement(sql);
                    stm.executeUpdate();

                } catch (Exception e) {
                    System.out.println(e);
                }

                try {

                    String sql1 = "UPDATE stock_inventory SET quantity = quantity - '" + q + "' WHERE item_id = '" + id + "' AND quantity >='" + q + "'";

                    stm = conn.prepareStatement(sql1);
                    stm.executeUpdate();
                } catch (Exception e) {
                    System.out.println(e);
                }

                moveouttableload();
                stocktableload();
                insufficientitemstbleload();

            }
        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void moveouttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveouttableMouseClicked


    }//GEN-LAST:event_moveouttableMouseClicked

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed

        int l = moveouttable.getSelectedRow();
        if (l < 0) {
            v4 = false;
            JOptionPane.showMessageDialog(null, "Select a row from Move Out table to return to stock");
        } else {

            try {

                int m = moveouttable.getSelectedRow();

                String id = moveouttable.getValueAt(m, 0).toString();
                int quan = Integer.parseInt(moveouttable.getValueAt(m, 3).toString());

                String time = moveouttable.getValueAt(m, 6).toString();

                try {

                    String sql1 = "UPDATE stock_inventory SET quantity = quantity + '" + quan + "' WHERE item_id = '" + id + "'";
                    stm = conn.prepareStatement(sql1);
                    stm.executeUpdate();

                } catch (Exception e) {

                }

                try {
                    String sql1 = "DELETE from move_out where item_id='" + id + "' AND time='" + time + "'";
                    stm = conn.prepareStatement(sql1);
                    stm.executeUpdate();
                } catch (Exception e) {
                }

                moveouttableload();
                stocktableload();
                insufficientitemstbleload();

                JOptionPane.showMessageDialog(null, "Successfully returned to Stock Inventory");

            } catch (Exception e) {
                System.out.println(e);
            }
        }


    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton18MouseClicked

    }//GEN-LAST:event_jButton18MouseClicked

    private void supplier_table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplier_table2MouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_supplier_table2MouseClicked

    private void autofillbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autofillbutActionPerformed

        int r = supplier_table2.getSelectedRow();
        if (r < 0) {

            v4 = false;
            JOptionPane.showMessageDialog(null, "Select a row from Supplier List to Autofill Data");

        } else {

// TODO add your handling code here:
            int t = supplier_table2.getSelectedRow();

            String s_ID = supplier_table2.getValueAt(t, 0).toString();
            String s_name = supplier_table2.getValueAt(t, 1).toString();
            String s_location = supplier_table2.getValueAt(t, 2).toString();
            String item_type = supplier_table2.getValueAt(t, 5).toString();
            String item_name = supplier_table2.getValueAt(t, 4).toString();
            String itm_id=supplier_table2.getValueAt(r, 3).toString();
            String s_email = supplier_table2.getValueAt(t, 10).toString();
            String item_brand = supplier_table2.getValueAt(t, 6).toString();
            String item_model = supplier_table2.getValueAt(t, 7).toString();
            String item_price = supplier_table2.getValueAt(t, 8).toString();
            String item_quantity = supplier_table2.getValueAt(t, 9).toString();

            jLabel36.setText(s_name);
            //Sidtxt.setText(s_ID);
            jLabel39.setText(s_location);
            // Stypecombo.setSelectedItem(item_type);
            jLabel40.setText(item_name);
                //Semailtxt.setText(s_email);
            //Sbrandtxt.setText(item_brand);
            jLabel35.setText(item_model);
            jLabel38.setText(item_price);
            // Squantitytxt.setText(item_quantity);
            jLabel46.setText(item_brand);

        }

    }//GEN-LAST:event_autofillbutActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        main_gui k = new main_gui();
        k.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        login k = new login();
        k.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField28ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField28ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
            String h1=expectedcom.getSelectedItem().toString();
        String w = jTextField28.getText();
        if (w.isEmpty()) {
            v1 = false;
            JOptionPane.showMessageDialog(null, "Quantity should not be empty!");
        }
            else if(h1.equals("In Days"))  {
                v2=false;
                JOptionPane.showMessageDialog(null, "Expected date should selected to place your order!");
                    
                    } 
        else {
            int k = supplier_table2.getSelectedRow();
            String item_quantity = supplier_table2.getValueAt(k, 9).toString();

            int m = Integer.parseInt(item_quantity);

            int l = Integer.parseInt(jTextField28.getText());

            if (m < l) {
                JOptionPane.showMessageDialog(null, "Quantity should lower than the showing quantity");

            } else {
                int h = supplier_table2.getSelectedRow();

                String iname = jLabel40.getText();
                String br = jLabel46.getText();
                String mod = jLabel35.getText();
                String sname = jLabel36.getText();
                String qua = jTextField28.getText();
                String iprice = jLabel38.getText();
                String loca = jLabel39.getText();
                String email = supplier_table2.getValueAt(h, 10).toString();
                String exp=expectedcom.getSelectedItem().toString();
                int expec=Integer.parseInt(exp);
                
                DateFormat dateFormat= new SimpleDateFormat("yyyy/MM/dd");

                Calendar c = Calendar.getInstance();    
                c.setTime(new Date());
                c.add(Calendar.DATE, expec);
                String expcdate=dateFormat.format(c.getTime());

                EmailGenerate(iname, br, mod, sname, qua, iprice, loca, email,expcdate);

            }
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        clearm();
        search_itemnametxt.setText(null);
        mvquantitytxt.setText(null);
        searchitemcombo.setSelectedItem("Select type");
        jComboBox1.setSelectedItem("Vehicle No");


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        fillcombonames1();
        stocktableload();
        suppliertableload();
        insufficientitemstbleload();
        moveouttableload();
        suppliertable2load();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        clears();
        AddSup.setVisible(true);
        searchsuppliertxt.setText(null);
        searchitemtxt.setText(null);
        searchlocationtxt.setText(null);
        searchcombo.setSelectedItem("Select type");
            

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        fillcombonames1();
        stocktableload();
        suppliertableload();
        insufficientitemstbleload();
        moveouttableload();
        suppliertable2load();

// TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        nametxt.setText(null);
        brandtxt.setText(null);
        combotype.setSelectedItem("Select type");
        modeltxt.setText(null);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        jLabel36.setText(null);
        jLabel39.setText(null);
        jLabel40.setText(null);
        jLabel35.setText(null);
        jLabel38.setText(null);
        jLabel46.setText(null);

// TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        fillcombonames1();
        stocktableload();
        suppliertableload();
        insufficientitemstbleload();
        moveouttableload();
        suppliertable2load();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void SnametxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SnametxtKeyTyped

    }//GEN-LAST:event_SnametxtKeyTyped

    private void SlocationtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SlocationtxtActionPerformed

    }//GEN-LAST:event_SlocationtxtActionPerformed

    private void SlocationtxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_SlocationtxtCaretUpdate

    }//GEN-LAST:event_SlocationtxtCaretUpdate

    private void SlocationtxtInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_SlocationtxtInputMethodTextChanged

    }//GEN-LAST:event_SlocationtxtInputMethodTextChanged

    private void SlocationtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SlocationtxtKeyPressed

    }//GEN-LAST:event_SlocationtxtKeyPressed

    private void SlocationtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SlocationtxtKeyReleased

    }//GEN-LAST:event_SlocationtxtKeyReleased

    private void SnametxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SnametxtKeyPressed

    }//GEN-LAST:event_SnametxtKeyPressed

    private void SnametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SnametxtKeyReleased
        String m = Snametxt.getText();
        try {
            String sql = "select * from suppliers where sname='" + m + "' ";
            stm = conn.prepareStatement(sql);
            k = stm.executeQuery();
            ResultSet h = k;
         
            Boolean j = k.first();
           
            do {
                if (j.equals(true)) {
                    
                    String res = k.getString("slocation");
                    
                    Slocationtxt.setText(res);

                    String si = k.getString("sid");
                    Sidtxt.setText(si);

                    String em = k.getString("semail");
                    Semailtxt.setText(em);
                } else {
                   
                    try {
                        String sql1="select MAX(sid) as rt from suppliers";
                        stm=conn.prepareStatement(sql1);
                        ResultSet re=stm.executeQuery();
                        
                     while(re.next())  {
                           
                           String sa=re.getString("rt");
                           
                           //System.out.println(sa);
                           if(sa==null){
                              
                               int id=1;
                               String sa1=String.valueOf(id);
                               Sidtxt.setText(sa1);
                               Semailtxt.setText(null);
                               Slocationtxt.setText(null);
                               break;
                           } 
                           else{
                               int sa2=Integer.parseInt(sa);
                               sa2++;
                              Sidtxt.setText(String.valueOf(sa2));
                              Semailtxt.setText(null);
                              Slocationtxt.setText(null);

                   
                   
                               break;
                           }
                           
                           

                   
                   
                           
                           
                           
                       }break;
                        
                        
                    } catch (Exception e) {
                    }

                }
            } while (!k.next());

        } catch (Exception e) {

        }

    }//GEN-LAST:event_SnametxtKeyReleased

    private void SitemnametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SitemnametxtKeyReleased
        
 String m = Sitemnametxt.getText();
        try {
            String sql = "select * from itemsneeded where iname='" + m + "' ";
            stm = conn.prepareStatement(sql);
            k = stm.executeQuery();
            ResultSet h = k;
         
            Boolean j = k.first();
           
            do {
                if (j.equals(true)) {
                    String res0=k.getString("iid");
                    itmidlbl.setText(res0);
                    
//                    String res = k.getString("ibrand");
//                    Sbrandtxt.setText(res);
//                    String res1 = k.getString("imodel");
//                    Smodeltxt.setText(res1);
                    String res2 = k.getString("itype");
                    Stypecombo.setSelectedItem(res2);
                    
                } else {
                    
                    try {
                        String sql1="select MAX(iid) as rt from itemsneeded";
                        stm=conn.prepareStatement(sql1);
                        ResultSet re=stm.executeQuery();
                        
                     while(re.next())  {
                           
                           String sa=re.getString("rt");
                           
                           System.out.println(sa);
                           if(sa==null){
                               
                               int id=1;
                               String sa1=String.valueOf(id);
                               itmidlbl.setText(sa1);
                               
                               break;
                           } 
                           else{
                               int sa2=Integer.parseInt(sa);
                               sa2++;
                              itmidlbl.setText(String.valueOf(sa2));
                               break;
                           }
                           
                           
                           
                       }break;
                        
                        
                    } catch (Exception e) {
                    }

                }
            } while (!k.next());

        } catch (Exception e) {

        }

    }//GEN-LAST:event_SitemnametxtKeyReleased

    private void InametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InametxtKeyReleased
       String h=Inametxt.getText();
       
       String sql="select item_name from stock_inventory where item_name='"+h+"' ";
       
        try {
            stm=conn.prepareStatement(sql);
            k=stm.executeQuery();
            Boolean m=k.first();
            
            if(m.equals(false)){
                String ss="select MAX(item_id) as maxi from stock_inventory";
                stm=conn.prepareStatement(ss);
                k=stm.executeQuery();
                
                while(k.next()){
                    String lo=k.getString("maxi");
                    int ma=Integer.parseInt(lo);
                    ma++;
                    Iidtxt.setText(String.valueOf(ma));
                    Ipricetxt.setText(null);
                
                Ibrandtxt.setText(null);
                Imodeltxt.setText(null);
                Iquantitytxt.setText(null);
                Isellingtxt.setText(null);
                Itypecombo.setSelectedItem("Select type");
                
                    break;        
                }
            }
            else{
                 String h1=Inametxt.getText();
       
       String sql1="select * from stock_inventory where item_name='"+h+"' ";
            stm=conn.prepareStatement(sql1);
            k=stm.executeQuery();
            while(k.next()){
                
                String item_ID =k.getString("item_id");
               
                //String item_price = k.getString("item_purchase_price");
               // String item_brand = k.getString("item_brand");
               // String item_model = k.getString("item_model");
                //String item_quantity = k.getString("quantity");
              //  String item_selling = k.getString("item_selling_price");
                String item_type = k.getString("item_type");
                
                
                //Ipricetxt.setText(item_price);
                
                //Ibrandtxt.setText(item_brand);
              //  Imodeltxt.setText(item_model);
               // Iquantitytxt.setText(item_quantity);
               // Isellingtxt.setText(item_selling);
               Itypecombo.setSelectedItem(item_type);
               Iidtxt.setText(item_ID);
               
                break;
                
            }
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
    }//GEN-LAST:event_InametxtKeyReleased

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
      
        AdvDelete adv;
        try {
            adv = new AdvDelete();
            adv.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton13ActionPerformed

    private void insufsliderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insufsliderMouseClicked
      
    }//GEN-LAST:event_insufsliderMouseClicked

    private void insufsliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insufsliderMouseReleased
        int m=insufslider.getValue();
      String ku=String.valueOf(m);
      
      
       try {

            String sql = "Select item_id as ID, item_name as Name, quantity as Quantity, item_type as Type from stock_inventory where quantity <= '"+ku+"'";

            stm = conn.prepareStatement(sql);

            k = stm.executeQuery();

            insufficienttable.setModel(DbUtils.resultSetToTableModel(k));

        } catch (Exception e) {
        }
      
      
    }//GEN-LAST:event_insufsliderMouseReleased

    private void InametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InametxtActionPerformed

    private void IbrandtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IbrandtxtKeyReleased
        String h=Inametxt.getText();
        String br=Ibrandtxt.getText();
       
       String sql="select item_name,item_brand from stock_inventory where item_name='"+h+"' AND item_brand='"+br+"' ";
       
        try {
            stm=conn.prepareStatement(sql);
            k=stm.executeQuery();
            Boolean m=k.first();
            
            if(m.equals(false)){
                String ss="select MAX(item_id) as maxi from stock_inventory";
                stm=conn.prepareStatement(ss);
                k=stm.executeQuery();
                
                while(k.next()){
                    String lo=k.getString("maxi");
                    int ma=Integer.parseInt(lo);
                    ma++;
                    Iidtxt.setText(String.valueOf(ma));
                    Ipricetxt.setText(null);
                
                
                Imodeltxt.setText(null);
                Iquantitytxt.setText(null);
                Isellingtxt.setText(null);
                
                    break;        
                }
            }
            else{
                 String h1=Inametxt.getText();
                 String br1=Ibrandtxt.getText();
       
       String sql1="select * from stock_inventory where item_name='"+h+"' and item_brand='"+br1+"' ";
            stm=conn.prepareStatement(sql1);
            k=stm.executeQuery();
            while(k.next()){
                
                String item_ID =k.getString("item_id");
                
               
                //String item_price = k.getString("item_purchase_price");
               // String item_brand = k.getString("item_brand");
               // String item_model = k.getString("item_model");
                //String item_quantity = k.getString("quantity");
              //  String item_selling = k.getString("item_selling_price");
                String item_type = k.getString("item_type");
                
                
                
                //Ipricetxt.setText(item_price);
                
                //Ibrandtxt.setText(item_brand);
              //  Imodeltxt.setText(item_model);
               // Iquantitytxt.setText(item_quantity);
               // Isellingtxt.setText(item_selling);
               Itypecombo.setSelectedItem(item_type);
                Iidtxt.setText(item_ID);
               
                break;
                
            }
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_IbrandtxtKeyReleased

    private void ImodeltxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ImodeltxtKeyReleased
       
          String h=Inametxt.getText();
        String br=Ibrandtxt.getText();
       String mo=Imodeltxt.getText();
       String sql="select item_name,item_brand from stock_inventory where item_name='"+h+"' AND item_brand='"+br+"' AND item_model='"+mo+"' ";
       
        try {
            stm=conn.prepareStatement(sql);
            k=stm.executeQuery();
            Boolean m=k.first();
            
            if(m.equals(false)){
                String ss="select MAX(item_id) as maxi from stock_inventory";
                stm=conn.prepareStatement(ss);
                k=stm.executeQuery();
                
                while(k.next()){
                    String lo=k.getString("maxi");
                    int ma=Integer.parseInt(lo);
                    ma++;
                    Iidtxt.setText(String.valueOf(ma));
                    
                    
                Ipricetxt.setText(null);
          
                Iquantitytxt.setText(null);
                Isellingtxt.setText(null);
                
                    break;        
                }
            }
            else{
                 String h1=Inametxt.getText();
                 String br1=Ibrandtxt.getText();
                   String mo1=Imodeltxt.getText();
       String sql1="select * from stock_inventory where item_name='"+h+"' and item_brand='"+br1+"' AND item_model='"+mo1+"' ";
            stm=conn.prepareStatement(sql1);
            k=stm.executeQuery();
            while(k.next()){
                
                String item_ID =k.getString("item_id");
                
               
                String item_price = k.getString("item_purchase_price");
               // String item_brand = k.getString("item_brand");
              // String item_model = k.getString("item_model");
                String item_quantity = k.getString("quantity");
              String item_selling = k.getString("item_selling_price");
                //String item_type = k.getString("item_type");
                
                
                
               Ipricetxt.setText(item_price);
                
                //Ibrandtxt.setText(item_brand);
              //  Imodeltxt.setText(item_model);
               Iquantitytxt.setText(item_quantity);
               Isellingtxt.setText(item_selling);
               // Itypecombo.setSelectedItem(item_type);
               Iidtxt.setText(item_ID);
               
                break;
                
            }
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_ImodeltxtKeyReleased

    private void SbrandtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SbrandtxtKeyReleased
       
        String m = Sitemnametxt.getText();
        String br=Sbrandtxt.getText();
        try {
            String sql = "select * from itemsneeded where iname='" + m + "' AND ibrand='"+br+"' ";
            stm = conn.prepareStatement(sql);
            k = stm.executeQuery();
            ResultSet h = k;
         
            Boolean j = k.first();
           
            do {
                if (j.equals(true)) {
                    String res0=k.getString("iid");
                    itmidlbl.setText(res0);
                    
                    String res = k.getString("ibrand");
                    Sbrandtxt.setText(res);
//                    String res1 = k.getString("imodel");
//                    Smodeltxt.setText(res1);
                    String res2 = k.getString("itype");
                    Stypecombo.setSelectedItem(res2);
                    
                } else {
                    
                    try {
                        String sql1="select MAX(iid) as rt from itemsneeded";
                        stm=conn.prepareStatement(sql1);
                        ResultSet re=stm.executeQuery();
                        
                     while(re.next())  {
                           
                           String sa=re.getString("rt");
                           
                           System.out.println(sa);
                           if(sa==null){
                              
                               int id=1;
                               String sa1=String.valueOf(id);
                               itmidlbl.setText(sa1);
                               
                               break;
                           } 
                           else{
                               int sa2=Integer.parseInt(sa);
                               sa2++;
                              itmidlbl.setText(String.valueOf(sa2));
                               break;
                           }
                           
                           
                           
                       }break;
                        
                        
                    } catch (Exception e) {
                    }

                }
            } while (!k.next());

        } catch (Exception e) {

        }
        
        
    }//GEN-LAST:event_SbrandtxtKeyReleased

    private void SmodeltxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SmodeltxtKeyReleased
        
        String m = Sitemnametxt.getText();
        String br=Sbrandtxt.getText();
        String mo=Smodeltxt.getText();
        try {
            String sql = "select * from itemsneeded where iname='" + m + "' AND ibrand='"+br+"' AND imodel='"+mo+"' ";
            stm = conn.prepareStatement(sql);
            k = stm.executeQuery();
            ResultSet h = k;
         
            Boolean j = k.first();
           
            do {
                if (j.equals(true)) {
                    String res0=k.getString("iid");
                    itmidlbl.setText(res0);
                    
                    String res = k.getString("ibrand");
                    Sbrandtxt.setText(res);
                    String res1 = k.getString("imodel");
                    Smodeltxt.setText(res1);
                    String res2 = k.getString("itype");
                    Stypecombo.setSelectedItem(res2);
                String   item_i=itmidlbl.getText();
                   String spi=Sidtxt.getText();
                   String s="select * from suppliersitems where sup_id='"+spi+"' AND itemid='"+item_i+"' ";
                   stm=conn.prepareStatement(s);
                   ResultSet mm=stm.executeQuery();
                   Boolean oo=mm.first();
                   if(oo.equals(true))
                   {
                      AddSup.setVisible(false);
                   }
                   
                       
                        
                       
                   
                    
                } else {
                    
                    try {
                        String sql1="select MAX(iid) as rt from itemsneeded";
                        stm=conn.prepareStatement(sql1);
                        ResultSet re=stm.executeQuery();
                        AddSup.setVisible(true);
                     while(re.next())  {
                           
                           String sa=re.getString("rt");
                           
                           
                           if(sa==null){
                               
                               int id=1;
                               String sa1=String.valueOf(id);
                               itmidlbl.setText(sa1);
                               AddSup.setVisible(true);
                               break;
                           } 
                           else{
                               int sa2=Integer.parseInt(sa);
                               sa2++;
                              itmidlbl.setText(String.valueOf(sa2));
                             
                               break;
                           }
                           
                           
                           
                       }break;
                        
                        
                    } catch (Exception e) {
                    }
                      
                }
            } while (!k.next());

        } catch (Exception e) {

        }
        
        
    }//GEN-LAST:event_SmodeltxtKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stock().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddItem;
    private javax.swing.JButton AddSup;
    private javax.swing.JLabel Background;
    private javax.swing.JTextField Ibrandtxt;
    private javax.swing.JTextField Iidtxt;
    private javax.swing.JTextField Imodeltxt;
    private javax.swing.JTextField Inametxt;
    private javax.swing.JTextField Ipricetxt;
    private javax.swing.JTextField Iquantitytxt;
    private javax.swing.JTextField Isellingtxt;
    private javax.swing.JComboBox Itypecombo;
    private javax.swing.JButton RemoveItem;
    private javax.swing.JButton RemoveSup;
    private javax.swing.JTextField Sbrandtxt;
    private javax.swing.JButton SearchItem;
    private javax.swing.JButton SearchSup;
    private javax.swing.JTextField Semailtxt;
    private javax.swing.JTextField Sidtxt;
    private javax.swing.JTextField Sitemnametxt;
    private javax.swing.JTextField Slocationtxt;
    private javax.swing.JTextField Smodeltxt;
    private javax.swing.JTextField Snametxt;
    private javax.swing.JTextField Spricetxt;
    private javax.swing.JTextField Squantitytxt;
    private javax.swing.JComboBox Stypecombo;
    private javax.swing.JButton UpdateItem;
    private javax.swing.JButton UpdateSup;
    private javax.swing.JButton autofillbut;
    private javax.swing.JTextField brandtxt;
    private javax.swing.JComboBox combotype;
    private javax.swing.JComboBox expectedcom;
    private javax.swing.JTable insufficienttable;
    private javax.swing.JSlider insufslider;
    private javax.swing.JLabel itmidlbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField modeltxt;
    private javax.swing.JTable moveouttable;
    private javax.swing.JTextField mvquantitytxt;
    private javax.swing.JTextField nametxt;
    private javax.swing.JTextField search_itemnametxt;
    private javax.swing.JComboBox searchcombo;
    private javax.swing.JComboBox searchitemcombo;
    private javax.swing.JTextField searchitemtxt;
    private javax.swing.JTextField searchlocationtxt;
    private javax.swing.JTextField searchsuppliertxt;
    private javax.swing.JTable stock_table1;
    private javax.swing.JTable supplier_table2;
    private javax.swing.JTable suppliertable;
    // End of variables declaration//GEN-END:variables

    private Object SimpleDateFormat(String mmmm_d_yyy) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String getCurrentTime() {
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        return sdf.format(cal.getTime());

    }

    private String getcurrentdate() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Calendar cal = Calendar.getInstance();
        return (dateFormat.format(cal.getTime()));

    }

//      public static boolean validateEmail(String email) { 
//          boolean status=false; String EMAIL_PATTERN ="^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-­]+)*@"+"[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\­.[A-Za-z]{2,})$"; 
//          Pattern pattern = Pattern.compile(EMAIL_PATTERN); Matcher matcher=pattern.matcher(email); if(matcher.matches()) { status=true; } else{ status=false; } return status;
//      }      
}
